{"version":3,"sources":["components/Jumbotron/index.js","components/Card/index.js","components/Form/index.js","components/List/index.js","components/Grid/index.js","components/Book/index.js","components/Footer/index.js","utils/API.js","pages/Home.js","pages/Saved.js","pages/NoMatch.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","className","Card","icon","title","concat","aria-hidden","Form","q","handleInputChange","handleFormSubmit","htmlFor","id","type","value","placeholder","name","onChange","required","onClick","List","ListItem","_ref2","Container","fluid","Row","Col","_ref3","size","split","map","join","Book","subtitle","authors","link","description","image","Button","target","rel","href","src","alt","Footer","API","getBooks","console","log","axios","get","params","getSavedBooks","deleteBook","delete","saveBook","bookData","post","Home","state","books","message","event","_event$target","_this","setState","Object","defineProperty","then","res","data","catch","preventDefault","handleBookSave","book","find","googleId","volumeInfo","infoLink","imageLinks","thumbnail","_this2","this","components_Jumbotron","components_Card","components_Form","length","List_List","components_Book","key","components_Footer","Component","Saved","err","handleBookDelete","_id","NoMatch","role","aria-label","Nav","open","width","window","innerWidth","updateWidth","newState","toggleNav","addEventListener","removeEventListener","Link","to","data-toggle","data-target","aria-controls","aria-expanded","location","pathname","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7f2e1330.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return <div className=\"jumbotron mt-4\">{children}</div>;\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n//build Card component\r\nfunction Card({ icon, title, children }) {\r\n  return (\r\n    <div className=\"card mt-4\">\r\n      <div className=\"card-header\">\r\n        <h3>\r\n          <strong>\r\n            <i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\r\n          </strong>\r\n        </h3>\r\n      </div>\r\n      <div className=\"card-body\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nfunction Form({ q, handleInputChange, handleFormSubmit }) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"Query\">\r\n          <strong>Book</strong>\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"Title\"\r\n          type=\"text\"\r\n          value={q}\r\n          placeholder=\"Ready Player One\"\r\n          name=\"q\"\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"pull-right\">\r\n        <button\r\n          onClick={handleFormSubmit}\r\n          type=\"submit\"\r\n          className=\"btn btn-lg btn-danger float-right\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// This component exports both the List and ListItem components\r\n\r\nexport const List = ({ children }) => (\r\n  <ul className=\"list-group\">\r\n    {children}\r\n  </ul>\r\n);\r\n\r\nexport function ListItem({ children }) {\r\n  return <li className=\"list-group-item\">{children}</li>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ListItem } from \"../List\";\r\nimport { Row, Col } from \"../Grid\";\r\nimport \"./style.css\";\r\n//build Book component\r\nfunction Book({ title, subtitle, authors, link, description, image, Button }) {\r\n  return (\r\n    <ListItem>\r\n      <Row className=\"flex-wrap-reverse\">\r\n        <Col size=\"md-8\">\r\n          <h3 className=\"font-italic\">{title}</h3>\r\n          {subtitle && <h5 className=\"font-italic\">{subtitle}</h5>}\r\n        </Col>\r\n        <Col size=\"md-4\">\r\n          <div className=\"btn-container\">\r\n            <a className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\r\n              View\r\n            </a>\r\n            <Button />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col size=\"md-6\">\r\n          <p className=\"font-italic small\">Written by {authors}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col size=\"12 sm-4 md-2\">\r\n          <img className=\"img-thumbnail img-fluid w-100\" src={image} alt={title} />\r\n        </Col>\r\n        <Col size=\"12 sm-8 md-10\">\r\n          <p>{description}</p>\r\n        </Col>\r\n      </Row>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <hr />\r\n      <p className=\"pull-right\">\r\n        <i className=\"fab fa-github\" /> Proudly built using React.js\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","//need use axios to hit the api, so here need to imporm axio\r\nimport axios from \"axios\";\r\n//export default an object\r\nexport default {\r\n  //getBooks is the key, and the value is a function, which passes the q and function is a axios api call by get method,\r\n  // the route is  \"/api/google\", pass the \"title\" + q as params \r\n  getBooks: function(q) {\r\n    console.log(q);\r\n    console.log(\"title:\"+q)\r\n    // this route should be \"localhost:3000/api/google\", will search on localhost 3000to find this route, if not fund will search in 3001 by proxy setting \r\n    return axios.get(\"/api/google\", { params: { q: \"title:\" + q } });\r\n  },\r\n  //getSavedBooks function will return the axios call, here the route is \"apl/books\"\r\n  getSavedBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  //will send the delete req by the route:(\"/api/books/\" +id) \r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  //saveBook will return the axio call api to post to db, the route is \"/api/books\" data need to pass is bookData \r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  }\r\n};\r\n","//impot React, component from react\r\nimport React, { Component } from \"react\";\r\n//import components which need in this file\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Card from \"../components/Card\";\r\nimport Form from \"../components/Form\";\r\nimport Book from \"../components/Book\";\r\nimport Footer from \"../components/Footer\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List } from \"../components/List\";\r\n//class Home has all the react component feature\r\nclass Home extends Component {\r\n  // set the initial  state: books is set as an empty array, \r\n  //q is empty, and message is \"Search For A Book To Begin!\" at the booklists\r\n  state = {\r\n    books: [],\r\n    q: \"\",\r\n    message: \"Search For A Book To Begin!\"\r\n  };\r\n//handleInputChange \r\n  handleInputChange = event => {\r\n    //deconstruction of event.tartget \r\n    const { name, value } = event.target;\r\n    //setstate to the search and search input, will get the search input\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n//getBooks is a function, which will define in API file and it will hit and pass the {q} as title to the api to google the books\r\n  getBooks = () => {\r\n    // here catch the this.state.q as the search tilte passing to the route\r\n    console.log(this.state.q)\r\n    API.getBooks(this.state.q)\r\n    //after get back from api\r\n      .then(res =>\r\n        {\r\n          console.log(res.data);\r\n          console.log(\"+++++++++++++\");\r\n        //setState, books to the res.data\r\n        this.setState({\r\n          books: res.data\r\n        })\r\n      }\r\n      )\r\n      //if nothing comback, setstate as; books is the an empty arry, and message \"No books found\"\r\n      .catch(() =>\r\n        this.setState({\r\n          books: [],\r\n          message: \"No New Books Found, Try a Different Query\"\r\n        })\r\n      );\r\n  };\r\n//submit event listener \r\n  handleFormSubmit = event => {\r\n  \r\n    event.preventDefault();\r\n    //in this event, will hit the API, so here call this.getBooks function, which is define in API file \r\n    this.getBooks();\r\n  };\r\n//handleBookSave event will pass the book id here \r\n  handleBookSave = id => {\r\n    //find the book in the books which id is the saved one\r\n    //it can run the for loop to find that one \r\n    const book = this.state.books.find(book => book.id === id);\r\n    console.log(id)\r\n//then run saveBook function from API, pass googleID, title... as bookData in API file\r\n    API.saveBook({\r\n      googleId: book.id,\r\n      title: book.volumeInfo.title,\r\n      subtitle: book.volumeInfo.subtitle,\r\n      link: book.volumeInfo.infoLink,\r\n      authors: book.volumeInfo.authors,\r\n      description: book.volumeInfo.description,\r\n      image: book.volumeInfo.imageLinks.thumbnail\r\n    }).then(() => this.getBooks());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1 className=\"text-center\">\r\n                <strong>(React) Google Books Search</strong>\r\n              </h1>\r\n              <h2 className=\"text-center\">Search for and Save Books of Interest.</h2>\r\n            </Jumbotron>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <Card title=\"Book Search\" icon=\"far fa-book\">\r\n              <Form\r\n                handleInputChange={this.handleInputChange}\r\n                handleFormSubmit={this.handleFormSubmit}\r\n                q={this.state.q}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Card title=\"Results\">\r\n              {this.state.books.length ? (\r\n                <List>\r\n                  {this.state.books.map(book => (\r\n                    <Book\r\n                      key={book.id}\r\n                      title={book.volumeInfo.title}\r\n                      subtitle={book.volumeInfo.subtitle}\r\n                      link={book.volumeInfo.infoLink}\r\n                      authors={book.volumeInfo.authors.join(\", \")}\r\n                      description={book.volumeInfo.description}\r\n                      image={book.volumeInfo.imageLinks.thumbnail}\r\n                      Button={() => (\r\n                        <button\r\n                          onClick={() => this.handleBookSave(book.id)}\r\n                          className=\"btn btn-primary ml-2\"\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      )}\r\n                    />\r\n                  ))}\r\n                </List>\r\n              ) : (\r\n                <h2 className=\"text-center\">{this.state.message}</h2>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Footer />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","//import React and relative components\r\nimport React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Card from \"../components/Card\";\r\nimport Book from \"../components/Book\";\r\nimport Footer from \"../components/Footer\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List } from \"../components/List\";\r\n//class Saved extends React Component\r\nclass Saved extends Component {\r\n  //set the initial state books as an empty arry\r\n  state = {\r\n    books: []\r\n  };\r\n//as the document.ready will run the this.getSavedBooks function\r\n  componentDidMount() {\r\n    this.getSavedBooks();\r\n  }\r\n//this mehod is from API\r\n  getSavedBooks = () => {\r\n    API.getSavedBooks()\r\n      .then(res =>\r\n        //after get back the data, setstate res.data to books []\r\n        this.setState({\r\n          books: res.data\r\n        })\r\n      )\r\n      //err handling\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleBookDelete = id => {\r\n    //this method will run the API.deleteBook passing the id,when comeback, run getSavedBooks()\r\n    API.deleteBook(id).then(res => this.getSavedBooks());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1 className=\"text-center\">\r\n                <strong>(React) Google Books Search</strong>\r\n              </h1>\r\n              <h2 className=\"text-center\">Search for and Save Books of Interest.</h2>\r\n            </Jumbotron>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n          {/* //render the books list  */}\r\n            <Card title=\"Saved Books\" icon=\"download\">\r\n\r\n              {this.state.books.length ? (\r\n                //if the.state books is not empty render the books in ul using the map\r\n                <List>\r\n                  {this.state.books.map(book => (\r\n                    <Book\r\n                      key={book._id}\r\n                      title={book.title}\r\n                      subtitle={book.subtitle}\r\n                      link={book.link}\r\n                      authors={book.authors.join(\", \")}\r\n                      description={book.description}\r\n                      image={book.image}\r\n                      Button={() => (\r\n                        <button\r\n                        // handleBookDelete onClick\r\n                          onClick={() => this.handleBookDelete(book._id)}\r\n                          className=\"btn btn-danger ml-2\"\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      )}\r\n                    />\r\n                  ))}\r\n                </List>\r\n                //if books arry is ampty, show the message\"No Saved Books\"\r\n              ) : (\r\n                <h2 className=\"text-center\">No Saved Books</h2>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Footer />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Saved;\r\n","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1 className=\"text-center\">404 Page Not Found</h1>\r\n            <h1 className=\"text-center\">\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nclass Nav extends Component {\r\n  state = {\r\n    open: false,\r\n    width: window.innerWidth\r\n  };\r\n\r\n  updateWidth = () => {\r\n    const newState = { width: window.innerWidth };\r\n\r\n    if (this.state.open && newState.width > 991) {\r\n      newState.open = false;\r\n    }\r\n\r\n    this.setState(newState);\r\n  };\r\n\r\n  toggleNav = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateWidth);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWidth);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Google Books\r\n        </Link>\r\n        <button\r\n          onClick={this.toggleNav}\r\n          className=\"navbar-toggler\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                onClick={this.toggleNav}\r\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\r\n                to=\"/\"\r\n              >\r\n                Search\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                onClick={this.toggleNav}\r\n                className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\r\n                to=\"/saved\"\r\n              >\r\n                Saved\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","//import React from react to make react in scope to use JSX\r\nimport React from \"react\";\r\n//import routing components: BrowserRouter, Router, Route and Switch from react-router-dom\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n//import Home from home.js. Saved from Saved.js, NoMatch from NoMatch.js and Nav from Nav folder\r\nimport Home from \"./pages/Home\";\r\nimport Saved from \"./pages/Saved\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Nav from \"./components/Nav\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Nav />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/saved\" component={Saved} />\r\n          <Route component={NoMatch} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","//impot React, using JSX need react in scope \r\nimport React from \"react\";\r\n// import ReactDom from react-dom to use render() method\r\nimport ReactDOM from \"react-dom\";\r\n//import App from App.js file\r\nimport App from \"./App\";\r\n//import registerServerWorker from registerServiceWorker file\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n//render(<App />)\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n//It shoulde be \r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}